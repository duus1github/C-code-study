          2006年真题
一简答题：
1、从作用域的角度简述变量的类型，它们采用的存储类别分别是什么？
答：按作用域的角度可分为局部变量和全局变量
  局部变量采取的存储类别：
    (1)自动变量，即动态局部变量（离开函数，值就消失）
    (2)静态局部变量（离开函数，值任然保留）
    (3)寄存器变量（离开函数，值就消失）
    (4)形参可以定义为自动变量或寄存器变量
  全局变量采取的存储类别：
    (1)静态外部变量(只限本文件引用)
    (2)外部变量（即非静态的外部变量，允许其他文件引用）
2、在调用有参函数是是如何实现数据传递的？
答：(1)在调用有参函数时，主调函数与被调函数之间有数据传递关系。
       在定义函数时函数名后面括号中的变量名称为“形式参数”
       在主调函数中调用一个函数时，函数名后面括号中的参数称为“实际参数”。
       实际参数可以是常量，变量或表达式
    (2)在调用函数的过程中，系统会把实际参数值传递给被调用函数的形参，
        即形参从实参得到一个值，改值在函数调用期间有效，可以参与改函数中的计算。
二、程序阅读题
1、
#include<stdio.h>
#define A 5
#define B A+1
int main(){
	/*
     	* 程序分析：使用define定义常量，A，常量B=A+1,
     	* 	   函数中将B赋值给a,然后输出a的值，显然B=A+1 即5+1=6；
    	* 	   而a--,是减号在后，所以先输出a=6之后再对a进行减法运算。
     	*/
	int a
	a=B;
	printf("%d",a--);
	return 0;
}
输出：6
分析：B = A+1 = 6,a=B ,所以a=6;a--减号在后，即程序执行之后计算。
2、
#include<stdio.h>
int main(){
	int i;
	for(i=1;i<=5;i++){
		switch(i%2){
		case 0:
			i++;
			printf("*");
			break;
		case 1:
			i+=2;
			printf("#");
			break;
		default:
			printf("error");
			break;
		}
	}
	return 0;
}
程序输出：#*
输出分析：1%2=1,走case 1 输出# i+=2 即i=3;for循环中i++ i=4;case 0 输出* i++ i=5 for循环中i++ i=6,循环结束
注意：1%2 = 1；case 中i ++ 后，不要忘记for循环中的i++
3、
#include<stdio.h>
int main(){
	int a[3][4] = {1,2,3,4,5,6,7,8,9,10,11,12};
	int i,j,(*p)[4]=a;
	printf("The output :\n");
	for(i=0;i<3;i++){
		for(j=0;j<4;j++){
			printf("%3d",*(*(p+i)+j));
		}
		printf("\n");
	}
	return 0;
}
输出：
The output :
  1  2  3  4
  5  6  7  8
  9 10 11 12
输出分析：
  函数汇总p是一个以行为单位的数组变量，并且指向a每行的首位地址.
  (*p)[4] = a 即为a[0],a[1],a[2];*(p+i)=a[i],*(*(p+i)+j)=a[i][j]
注：a[3][4] 同 *(*(p+i)+j) 先是行，后市列。  
4、
int a[]={0,1,2,3,4,5,6,7,8,9};
float f(int n){
		if(n==1){
			return a[0];
		}else{
			return ((float)(n*f(n-1)+a[n])/(n+1));
		}
	}
#include<stdio.h>
int main(){
	int n = 10;
	printf("f(%d)=%g\n",n,f(n));
	return 0;
}
输出结果：f(10)=4
输出分析：main()函数中定义n=10,二f()函数是一个递归函数。
	
5、
#include<stdio.h>
int m=13;
int fun2(int x,int y){
	int m=3;
	return x*y-m;
}
int main(){
	int a=7,b=5;
	printf("%d,%d,%d\n",fun2(a,b),m,fun2(a,b)/m);
  return 0;
}
输出：2
输出分析：fun2()函数中定义了m,是局部变量，会覆盖上面定义的全局变量，所以fun2()返回32,32/m,此时m引用全局变量13,32/13,是整除=2.
三、根据流程图写出对应的程序
#include<stdio.h>
int main(){
	int sum=0,i=1;
	while(i<=100){
		sum=sum+i;
		i=i+1;
	}
	printf("%d",sum);
	return 0;
}
四、程序填空题
1、将大于100，小于150之间的不能被3整除的数输出，要求每行输出10个。
#include<stdio.h>
int main(){
	int n,i=0;
	for(n=101;n<150;n++){
		if(n%3==0) continue;
		printf("%d  ",n);
		i++;
		if(i%10==0) printf("\n");
	}
	return 0;
}
填空位置：1：conitnue; 2:i++; 3:i%10==0.
总结：考察循环控制，
考点位置：第五章循环结构——5.4for语句实现循环（例题见例5.1）。
2、从键盘输入10个数，用选择法从小到大排序
#include<stdio.h>
int main(){
	int i,a[11];
	void sort(int ,int b[]);
	printf("please input to integer data:\n");
	for(i=1;i<=10;i++){
		scanf("%d",&a[i]); 1
	}
	sort(10,a); 2
	printf("The sorted numbers:\n");
	for(i=1;i<=10;i++){
		printf("%d",a[i]); 3
	}
	return 0;
}
void sort(int n,int b[]){
	int i,j,t;
	for(i=1;i<n;i++){
		for(j=i+1;j<=n;j++){ 4
			if(b[i]>b[j]){
				t=b[i];
				b[i]=b[j];
				b[j]=t;
			}
		}
	}
}
填空位置：1：a[i];  2:10,a;  3:a[i];  4:i+1
总结：选择法：预先定义一个最值，每次与原先的值进行比较，选出最值，一直循环。
考察点：选择法的概念，函数的调用。
考点出处：第6章习题2。
3、找出三个字符串中的最小者
#include<stdio.h>
#include<string.h>
int main(){
	char str[20],s[3][20];
	int i;
	for(int i=1;i<=3;i++){
		gets(s[i]);
	}
	if(strcmp(s[0],s[1])<0){ 1
		strcpy(str,s[0]); 
	}else
		strcpy(str,s[1]); 2
	if(strcmp(str,s[2])<0) 3
		strcpy(str,s[2]);
	printf("最小字符串是：\n%s\n",str);
	return 0;
}
填空：1：s[0],s[1]   2:str,s[1]   3:str,s[2]
考点：字符串常用函数的意思。
考点出处：第7章例12
五、程序设计题
1、编写程序，使其完成1^k+2^k+……+n^k的计算，k与n均为大于1的整数。
方案一：
#include<stdio.h>
int main(){
	int n,k,total=0;
	int sum(int n,int k);
	printf("请输入n和k\n");
	scanf("%d%d",&n,&k);
	if(n>1||k>1){
		for(int i=0;i<=n;i++)
			total+=sum(i,k);
	}
	printf("res:%d",total);
	return 0;
}
int sum(int n,int k){
	for(int i=2;i<=k;i++){
		n*=n;
	}
	return n;
}

方案二：
#include<stdio.h>
double power(int m,int k){ //求m的n次方并返回
   int i;
   double pw=1;
   for(i=1;i<=k;++i){
       //pw每次乘加m,k来控制乘的次数
       pw*=m;
   }
   return pw;
}
double sum_power(int k,int n){
    //接收k,n定义i
    int i;
    //初始化sum的值
    double sum=0;
    //循环i,
    for(i=1;i<=n;++i){
	//调用power()函数，即每次开方的值，并计算和
	sum+=power(i,k);
    }
    return sum;
}
int main(){
    double sum=0;
    //定义k,n，并输入这两个值
    int k,n;
    printf("intput k:\n");
    scanf("%d",&k);
    printf("input n:\n");
    scanf("%d",&n);
    //调用sum_power()计算和
    sum=sum_power(k,n);
    printf("\n1^%d+2^%d+...%d^%d = %.0lf\n", k,k,n,k,sum);
    return 0;
}
注意：sqrt()函数时求平方根的函数
总结：对函数封装，调用。关键是利用for循环表示出i^k（使用k来控制for循环，变量i每次乘以自身）。
题目出处：外围。
2、用递归方法将一个整数n(n>=1)转换成字符串。例如：输入483，应输出字符串“483”
#include<stdio.h>
int main(){
	void convert(int n);
	int num;
	printf("please enter your numbers:\n");
	scanf("%d",&num);
	printf("output:\n");
	if(num<0){
		putchar('-');
	}
	convert(num);
	return 0;
}
void convert(int num){
	int i;
	if((i=num/10)!=0){
		convert(i);
	}
	putchar(num%10+'0');
}
总结：1、关键是要知道使用putchar()函数，建立递归，每次使用putchar()输出一个字符。
	2、putchar(32）对应的是ascii码中的空格，即输出一个空格
	3、putchar(num+'0')，后面加的0是转化为字符串的简便操作。

题目出处：第7章习题17.
3、辗转相除法求解两个整数最大公约数的思想是：设两个整数m,n,求m除以n的余数p,
   若p!=0,则将上次的除数做被除数，上次的余数做除数，继续求余数，如此循环下去，直到余数为零，
   如此循环下去，直到余数为零，如此时的除数不为1的话，则该除数为m、n的最大公约数，否则m、n没有最大公约数。
   编写一个函数gys(int m,int n),用辗转相除法求出它们的最大公约数，返回最大公约数。
方案一：
/**
 * 2006年真题    程序设计题
 * 			3、辗转相除法求最大公约数
 *
 */
#include<stdio.h>
int sys(int m,int n){
	int r;					//用于存储余数
	if(m<n){
		r=m;
		m=n;
		n=r;
	}
	while(r!=0){
		r=m%n;
		m=n;
		n=r;
	}
	if(n!=1)
		printf("n为m,n的最大公约数");
	else
		printf("m,n没有最大公约数");

	return n;
}

总结：求最大公约数。
题目出处：第5章课后习题3.
全总结：知识点：for循环的控制，continue,i++,字符串函数（）strcmpy()比较两个字符串的大小，> 返回1；= 返回0 ；< 返回-1。
	此真题各个题目的选择大部分从教材中选出，有例题，也有课后习题，但大致范围来自5,6,7章的例题及课后习题。
