一、例题：
例1：求1+2+3+4...+100.
方案一：使用while语句。
#include<stdio.h>
int main(){
    int sum=0;
    int i=1;
    while(i<=100){
	sum+=i;
	i++;
    }
    printf("sum:%d",sum);
    return 0;
}
方案二：使用do...while语句。
#include<stdio.h>
int main(){
    int sum=0;
    int i=1;
    do{
	sum+=i;
	i++;
    }while(i<=100);
    printf("sum:%d",sum);
    return 0;
}
例2：while 和do...while循环的比较。
(1)用while循环：
#include<stdio.h>
int main(){
    int sum=0,i=1;
    printf("please enter i,i=?\n");
    scanf("%d",&i);
    while(i<=10){
	sum+=i;
	i++;
    }
    printf("sum=%d",sum);
    return 0;
}
(2)使用do...while()循环：
#include<stdio.h>
int main(){
    int sum=0,i=1;
    printf("please enter i,i=?\n");
    scanf("%d",&i);
    do{
	sum+=i;
	i++;
    }while(i<=10);
    printf("sum=%d",sum);
    return 0;
}
例4：在全系1000学生中，征集慈善募捐，当总数达到10万元时就就结束，统计此时的捐款人数，以及平均每人的捐款人数。
#include<stdio.h>
#define SUM 100000
int main(){
    float total,amount,aver;
    int i;
    for(i=1,total=0;i<1000;i++){
	printf("please enter your count:");
	scanf("%f",&amount);
	total+=amount;
	if (total>=SUM) break;
    }
    aver = total/i;
    printf("num=%d\n aver=%0.2f\n",i,aver);
    return 0;
}
总结：注意，金钱与平均数，总数都应该定义为float类型，本题更适合使用for循环，当然while()也可以但要使用&&或
例5：要求输出100-200之间不能被3整除的数。
#include<stdio.h>
int main(){
    int i;
    for(i=100;i<200;i++){
	if(i%3==0){
	    continue;
	}
	printf("%d\n",i);
    }
    return 0;
}
例6：输出4*5的矩阵。
#include<stdio.h>
int main(){
    int i,j;
    for(i=1;i<=4;i++){
      for(j=1;j<=5;j++){
          printf("%d\t",i*j);
      }
	    printf("\n");
    }
    return 0;
}
#include<stdio.h>
int main(){
    int i,j;
    for(i=1;i<=4;i++){
      for(j=1;j<=5;j++){
          if(i==3&&j==1)break; // 遇到第3行和第1列，终止循环。
          printf("%d\t",i*j);
      }
	  printf("\n");
    }
    return 0;
}
例7：用pi/4=1-1/3+1/5-1/7+....公式求pi的近似值，直到发现每一项的绝对值小于10^6为止。
#include<stdio.h>
#include<math.h>
int main(){
    float pi=0;
    double y=1,tems=1.0;
    int sign=1;
    while(fabs(tems)>=1e-6){  // fabs():返回该数的绝对值。
	pi+=tems;
	y+=2;			//分母每次加二
	sign=-sign;		// 赋值之后再次赋值正好为正数，依次循环
	tems=sign/y;
    }
    pi*=4;
    printf("pi=%10.8f\n",pi);
    return 0;
}
例8：求fibonacci数列的前40个数，这个数列有以下特点，第1,2个数为1，第3个数开始，该数是前面两个数之和。
1.
#include<stdio.h>
#include<math.h>
int main(){
    int num1=1,num2=1,num3=1;
    for(int i=1;i<40;i++){
	if(i>2){
	    num3=num1+num2;
	}
	printf("%d\n",num3);
	num1=num2;
	num2=num3;
    }

    return 0;
}
例9：输入一个大于3的整数n,判定他是否为素数（质数）
#include<stdio.h>
#include<math.h>
int main(){
    /*
     * 只需判断是否能够被2-根号n之间的整数整除即可，
     */
    int n,k,i;
    scanf("%d",&n);
    k=sqrt(n);
    for(i=2;i<=k;i++){
	    if(n%i==0)break;
    }
    if(i<=k)printf("是质数%d",n);
    else printf("不是质数%d",n);
    return 0;
}
例10：求100-200之间的全部素数
#include<stdio.h>
#include<math.h>
int main(){
    int k,n =101,i,m;
    for(;n<=200;n+=2){		// n从100变化到200,对每个n进行判定
	k=sqrt(n);
	for(i=2;i<=k;i++){
	    if(n%i==0)break; 	//如果n被i整除终止内循环，此时i<k+1
	}
	if(i>=k+1){		//若i>=k+1表示n未被整除
	    printf("%d ",n);	//应确定n是素数
	    m=m+1;		//m用来控制换行，一行内输出10个素数
	}
	if(m%10==0)printf("\n");//m累计到10的倍数，换行。
    }
    printf("\n");
    return 0;
}
例11：译密码，为使电文保密，往往按一定规律将其转化为密码，收报人在按一定规律将其译回原文，例如：将字母A转化为E,a转化为e,W变成A,X变成B,...
      输入China!转化为Glame!,键盘输入一行字符，要求输出对应的密码。
#include<stdio.h>
#include<math.h>
int main(){
    char c;
    c=getchar();
    while(c!='\n'){ 	// 检测c是否有换行符
	if((c>='a' && c<='z')||(c>='A'&&c<='Z')){ // 判断输入的是字母
	    if(c>"W" && c<='Z'|| c>='w' && c<='z')c = c-22; //如果值最后4个字母就-22
	    else c+=4;				// 正常字母就加4
	}
	printf("%c",c);
	c=getchar();		// 在输入下一个字母
    }
    printf("\n");
    return 0;
}
二、课后习题：
3、输入两个正整数m和n，求其最大公约数和最小公倍数。
#include<stdio.h>
#include<math.h>
int main(){
    /*
     * 思路：
     * 	最小公倍数:将输入的两个数进行大小位置的互换，然后他们的最小公倍数就是她们的积，然后对m进行判断，此时m是较大的数，
     * 	最大公约数:
     */
     	//TODO:定义变量
	int m,n,max,min,temp;
	printf("请输入两个整数m,n\n");
	scanf("%d,%d",&m,&n);
	//TODO:对两个整数进行比较，始终以m为最大值
	if(n>m){
		temp=m;
		m=n;
		n=temp;
	}
	//TODO:for循环获取最大公约数和最小公倍数
	for(int i=1;i<=n;i++){
		//这个是最大公约数
		if(n%i==0 && m%i==0){
			max=i;
		}
		//最小公倍数
		if(m%i==0){
			min = m;
		}else
			min = m*n;
	}
	printf("最大公约数为：%d, 最小公倍数为：%d",max,min);
	return 0;
}
    
4.输入一行字符，分别统计出其中英文字母，空格，数字和其他字符的个数。
#include<stdio.h>
#include<math.h>
int main(){
    char str;
    int space=0,letters=0,num=0,other=0;
    while((str = getchar()) != '\n'){  // 接收字符串输入，并判断是否是最后一个字符来控制循环结束
	if (str>='a' && str<='z' || str>='A' && str<='Z')
	    letters++;
	else if(str == ' '){
	    space ++;
	}else if(str >'0' && str <'9'){
	    num ++;
	}else{
	    other++;
	}
    }
    printf("空格数=%d,英文字母数=%d,数字=%d,其他=%d",letters,space,num,other);
    return 0;
}
总结：要使用getchar()来接收字符串，并用'\n'来判断是否是最后。空格直接使用' ',0-9也是用'0'<=a&&'9'>=a
5.求Sn=a+aa+aaa+....+的值，其中a是一个数字，n表示a的位数，例如：2+22+222+....+,n由键盘输入。
#include<stdio.h>
#include<math.h>
int main(){
    int a,n,s=0,tn=0;
    printf("请输入基数a，和位数n:\n");
    scanf("%d,%d",&a,&n);
    for(int i=1;i<=n;i++){
	tn=a+tn;	// 计算a,aa，aaa等单个值
	s=s+tn;		// 计算a+aa+...的和
	a=a*10;		// 计算下一个a,aa,aaa的值
    }
    printf("和为：%d",s);
    return 0;
}
总结：注意每个a的值，aa=a*10+a.
6.求（1！+2！+3！...+20!+n!）
#include<stdio.h>
#include<math.h>
int main(){
    double s=0,t=1;
    int n;
    for(n=1;n<=20;n++){
	t=t*n;		//1*2
	s=s+t;		//1+1*2+1*2*3
    }
    printf("1!+2!+...+20!=%22.15e",s);
    return 0;
}
总结：n用于控制循环，不能直接获取最终的值，要利用t.,输出要用%e
7.求(1-100)k+(1-50)k^2+(1-10)1/k;
#include<stdio.h>
#include<math.h>
int main(){
    /*
     * 及求1加到100中每个数与k相乘的值+1-50之间每个数与k^2相乘的值+1-10中每个数与1/k的乘积
     */
    int n1 = 100, n2 = 50, n3 = 10;
    double k, s1 = 0, s2 = 0, s3 = 0;
    for (k = 1; k <= n1; k++) /*计算1到100的和*/
	{
	s1 = s1 + k;
	printf("s1=%f\n",s1);
	}
    for (k = 1; k <= n2; k++) /*计算1到50各数的平方和*/
	{
	s2 = s2 + k * k;
	printf("s2=%f\n",s2);
	}
    for (k = 1; k <= n3; k++) /*计算1到10的各倒数和*/
	{
	s3 = s3 + 1 / k;
	printf("s3=%f\n",s3);
	}
    printf("sum=%15.6f\n", s1 + s2 + s3);
    return 0;
    }
总结：这里的k,1/k,k*k，是要以这个为基数来相加的和，而不是说要另外乘这个。
     另外，分开for循环比较好，减少了意外情况的产生。
8.输出所有的“水仙花数”，即一个3位数，其个位数字立方和等于该数本身，例如153的水仙花数，因为153=13+53+33.
#include<stdio.h>
#include<math.h>
int main(){
    /*
     * 一个三位数，这个数的每位数的立方，和=该位数
     * /:整除   %：取余
     */
    int n=100,i,j,k;
    for(;n<=1000;n++){
	i=n/100;		//获取百位数字
	j=n/10-i*10;		//获取十位数字
	k=n%10;			//获取各位数字
	if(n==i*i*i+j*j*j+k*k*k)//判断他们相等即为水仙花数
	    printf("%d\n",n);
    }
    return 0;
}
总结：正确取出个，十，百三个位上的数字。
9.一个数如果恰好等于它的因子之和，这个数就称为"完数"。例如：6的因子为1,2,3.而6=1+2+3。
找出1000以内的所有完数，并按下例格式输出：6 is factors are 1,2,3.
#include <stdio.h>
int main(){
    int m,s,i;
    for (m=2;m<1000;m++){			//控制m为1000以内的数
	s=0;					//初始化s=0
	for (i=1;i<m;i++)			//二重循环i,i比m小
	    if ((m%i)==0) s=s+i;		//判断，如果一重循环的值m能整除二重循环的值i,就的出这个数

	if(s==m){				//（循环之外）判断s与循环的m是否相等
	    printf("%d,its factors are ",m);	//相等则输出该i的值
	    for (i=1;i<m;i++)
		if (m%i==0)  printf("%d ",i);
	    printf("\n");
	}
    }
  return 0;
 }
总结：1、sn必须定义在一层for循环的里面，这样每次外层循环时sn都能重置为0，在次进行计算，
     2、里层循环，j的初试值要从1开始计算，0的化计算i%0(分母不能为0)。
10.有一个分数序列，2/1,3/2,5/3,8/5,13/8,.....,求出这个数列的前20项之和。
#include<stdio.h>
#include<math.h>
int main(){
    float sn=0,m=2,n=1;
    int i,t;
    for(i=1;i<=20;i++){
	sn=sn+m/n;		//求和
	printf("sn=%0.2f,m/n%0.2f",sn,m/n);
	//分子和分母进行交换
	t=m;
	m=m+n;
	n=t;
	printf("n=%0.2f,m=%0.2f\n",n,m);
    }
    printf("sn=%0.2f",sn);
    return 0;
}
总结：关键点在于将分子与分母之间的值进行替换，一定要用到temp中间值。
11.一个球从100m高度自由落下，每次落下反跳回原高度的一半，在落下，在反弹，求他在第10次落地时，共经历多少米，第10次反弹多高。
#include<stdio.h>
#include<math.h>
int main(){
    float sn=100,high=sn/2;
    int i,n=10;
    for(i=2;i<=n;i++){
	//获取每次的高度。
	sn+=2*high;	/*第n次落地时共经过的米数*/
	high=high/2;	/*第n次反跳高度*/
    }
    printf("共经历%f米，第10次反弹%f高",sn,high);
    return 0;
}
总结：需要注意的是每次反弹是high的高度，以及总的高度，需要将第一次100米也要算上，所以可以直接定义sn=100。
12、猴子吃桃的问题，猴子第一天摘下若干个桃子，当即吃了一半，还不过瘾，又多吃了一个，第二天早上又将剩下的桃子吃掉一半，又多吃一个。
以后每天早上都吃了前一天剩下的一半零一个，到第10天想在吃时，就只剩一个桃子了，求第一天共摘了多少个桃子？
#include <stdio.h>
int main()
 {
  /*
   * 将x1与x2进行位置互换，转化第一天与第二天的桃子数。
   */

  int day,x1,x2;
  x2=1;
  for(day=9;day>0;day--)
   {x1=(x2+1)*2;    /*第1天的桃子数是第2天桃子数加1后的2倍.*/
    x2=x1;
//    day--;
   }
  printf("total=%d\n",x1);
  return 0;
 }
 总结：问第一天一共摘了多少个桃子，及吃的所有的桃子，所以不需要设置sn,用来计算总和，第一天所摘的桃子就是总和。
！13、用迭代法求x=根号a,求平方根的迭代公式为Xp+1=(Xn+a/Xn)/2,要求前后两次求出的x的差的绝对值小于10^-5.
#include<stdio.h>
#include<math.h>
int main(){
    float x1,x2;
    int a,n;
    printf("请输入a的值：");
    scanf("%d,%d",&a,&n);
    x1=a/2;
    x2=(x1+a/x1)/2;
    do{
	x1=x2;
	x2=(x1+a/x1)/2;
    }while(fabs(x1-x2)>=1e-5);
    printf("x1=%f",x1);
    return 0;
}
总结：判断10的-5次方为：1e-5,同时计算绝对值可用函数fabs()，
     这里使用do……while()来循环，需要预先对x1,x2进行表达式赋值
     循环中要对x1与x2的值进行互换。
！14、用牛顿迭代法求下面方程在1.5附近的根：2x^2-4x^2+3x-6=0.
#include<stdio.h>
#include<math.h>
int main(){
    /*
     * 牛顿迭代法：求方程，是一种近似的求法，即把f(x)在点x0出展开为泰勒级数f(x)=f(x0)+f'(x0)(x-x0)....
     * 	    解为：x1=x0-f(x0)/f'(x0)  即为迭代法的一个迭代关系式。
     *
     */
    double x0,x1,f0,f1;
    x1=1.5;
    do{
	x0=x1;
	f0=((2*x1-4)*x0+3)*x0-6;  // 附近的根公式
	f1=((6*x0-8)*x0+3);	  //
	x1=x0-f0/f1;
    }while(fabs(x1-x0)>=1e-5);
    printf("%5.2f",x1);
    return 0;
}
15.用二分法求下面方成在（-10,10）之间的根：2x^3-4x^2+3x-6=0.
#include<stdio.h>
#include<math.h>
int main(){
    float x0,x1,x2,fx0,fx1,fx2;
    do{// 输入x1,x2的值，根据x1,x2输入的值，求出fx1,fx2，如果两个数相乘大于0，则退出循环
	printf("请输入x1,x2的值\n");
	scanf("%f,%f",&x1,&x2);
	fx1=x1*((2*x1-4)*x1+3)-6;
	fx2=x2*((2*x2-4)*x2+3)-6;
    }while(fx1*fx2>0);
    // 二分法求得x0的值，然后代入方程式，求得fx0的值，如果fx0的绝对值不在10以内，就需要重复执行
    // 1、判断fx0*fx1是否小于0，小于在x0赋值给x2,fx0赋值给fx2,
    //			  大于则x0赋值给x1,fx0赋值给fx1,
    //2. 然后在重新计算x0,fx0的值。依次循环。
    do{
	x0=(x1+x2)/2;
	fx0=x0*((2*x0-4)*x1+3)-6;
	if((fx0*fx1)<0){
	    x2=x0;
	    fx2=fx0;
	}else{
	    x1=x0;
	    fx1=fx0;
	}
    }while(fabs(fx0)>=1e-5);
    printf("x0=%6.2f",x0);
    return 0;
}
























































